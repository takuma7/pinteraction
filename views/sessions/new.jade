extends ../layout

block content
  script(type='text/javascript', src='/javascripts/pdf.js')
  .container
    h2 Hold a New Sesssion
    .row
      .col-lg-6.col-md-6
        form.form-horizontal(action='/sessions/create', method='post')
          input#slide_id(type='hidden', name='slide_id', value='#{slide._id}')
          .form-group
            label.control-label.col-md-3.col-lg-3(for='presentor') Speaker
            .col-md-9.col-lg-9
              p.form-control-static=user.name
          .form-group
            label.control-label.col-md-3.col-lg-3(for='title') Title
            .col-md-9.col-lg-9
              input.form-control#title(name='title')
          .form-group
            label.control-label.col-md-3.col-lg-3(for='description') Description
            .col-md-9.col-lg-9
              textarea.form-control#description(name='description')
          .form-group
            .col-md-offset-3.col-lg-offset-3.col-md-9.col-ld-9
              input.btn.btn-primary(type='submit')
              &nbsp;
              a.btn.btn-default(href='/sessions') Cancel
      .col-md-6.col-lg-6
        .well
          h3=slide.title
          .slide-wrapper
            canvas#slide_canvas
            .progress#slide_progress
              .progress-bar.progress-bar-danger(style='width: 0%;')
          .form-group
            button.btn.btn-default#prev(onclick='goPrevious()')
              span.glyphicon.glyphicon-chevron-left
            button.btn.btn-default#next(onclick='goNext()')
                span.glyphicon.glyphicon-chevron-right
  script
    var url = "/uploads/#{slide.file_url}";
    PDFJS.disableWorker = true;
    var pdfDoc = null,
        pageNum = 1,
        scale = 1.0,
        canvas = document.getElementById('slide_canvas'),
        ctx = canvas.getContext('2d');
    function renderPage(num) {
      // Using promise to fetch the page
      SLIDE_STRING = ''; //reset string
      pdfDoc.getPage(num).then(function(page) {
        var viewport = page.getViewport($('#slide_canvas').parent().width()/page.getViewport(1.0).width);
        // debugger;
        canvas.height = viewport.height;
        canvas.width = viewport.width;
        // Render PDF page into canvas context
        var renderContext = {
          canvasContext: ctx,
          viewport: viewport
        };
        page.render(renderContext).then(function(){
          $('#slide_progress').attr('style', 'width:' +  $('#slide_canvas').width() + 'px;');
        
          console.log('retrieved text : ' + SLIDE_STRING);
          var re = /[h3p|h1p]s?:\/\/[-_.!~*짜'()a-zA-Z0-9;짜/?:짜@&=+짜$,%#]+?\//g;
          var urls = SLIDE_STRING.match(re);
          $('#url_list').html('');
          if(urls != null){
            urls = urls.map(function(url){
              return url.replace(/[h3p|h1p]/, 'http');
            });
            urls.map(function(url){
              $('#url_list').append('<li><a href="' + url + '" target="_blank">' + '<span class="glyphicon glyphicon-share"></span> '+ url + '</li>');
            });
          }
          console.log(urls);
        });
      });
      // Update page counters
      // document.getElementById('page_num').textContent = pageNum;
      // document.getElementById('page_count').textContent = pdfDoc.numPages;
      $('#slide_progress > .progress-bar').css({'width': (pageNum / pdfDoc.numPages * 100).toString() + '%'});
    }
    function goPrevious() {
      if (pageNum <= 1)
        return;
      pageNum--;
      renderPage(pageNum);
    }
    function goNext() {
      if (pageNum >= pdfDoc.numPages)
        return;
      pageNum++;
      renderPage(pageNum);
    }
    PDFJS.getDocument(url).then(function getPdfHelloWorld(_pdfDoc) {
      pdfDoc = _pdfDoc;
      renderPage(pageNum);
    });