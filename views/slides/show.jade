extends ../layout

block content
  script(type='text/javascript', src='/javascripts/pdf.js')
  .container
    - if(notice)
      .alert.alert-success=notice
    h2=slide.title
    .row
      .col-md-6.col-lg-6
        .slide-wrapper
          canvas#slide_canvas
          .progress#slide_progress
            .progress-bar.progress-bar-danger(style='width: 0%;')
        .form-group
          button.btn.btn-default#prev(onclick='goPrevious()')
            span.glyphicon.glyphicon-chevron-left
          button.btn.btn-default#next(onclick='goNext()')
            span.glyphicon.glyphicon-chevron-right
          - if(author.uid == user.uid)
            a.btn.btn-warning.pull-right(href='/sessions/new?slide_id=#{slide._id}') プレゼンする！
      .col-md-6.col-lg-6
        form.form-horizontal(action='/slides/create', method='post', enctype='multipart/form-data')
          .form-group
            label.control-label.col-md-3.col-lg-3(for='description') Description
            .col-md-9.col-lg-9
              p.form-control-static=slide.description
          .form-group
            label.control-label.col-md-3.col-lg-3(for='author') Author
            .col-md-9.col-lg-9
              - if(author.uid == user.uid)
                p.form-control-static=author.name + " (You)"
              - else
                a(href='/users/#{author.uid}')=author.name
          .form-group
            label.control-label.col-md-3.col-lg-3(for='created') Created At
            .col-md-9.col-lg-9
              p.form-control-static=slide.created
        hr
        .col-md-3.col-lg-3
          &nbsp; &nbsp;
          | Page:
          span#page_num
          | /
          span#page_count
        .col-md-6.col-lg-6
          ul#url_list.list-unstyled
  script
    var url = "/uploads/#{slide.file_url}";
    PDFJS.disableWorker = true;
    var pdfDoc = null,
        pageNum = 1,
        scale = 1.0,
        canvas = document.getElementById('slide_canvas'),
        ctx = canvas.getContext('2d');
    function renderPage(num) {
      // Using promise to fetch the page
      SLIDE_STRING = ''; //reset string
      pdfDoc.getPage(num).then(function(page) {
        var viewport = page.getViewport($('#slide_canvas').parent().width()/page.getViewport(1.0).width);
        // page.getAnnotations().then(function(annotationsData) {
        //   console.log(annotationsData);
        //   for (var i = 0; i < annotationsData.length; i++) {
        //     var data = annotationsData[i];
        //     var annotation = PDFJS.Annotation.fromData(data);
        //     if (!annotation || !annotation.hasHtml()) {
        //       continue;
        //     }
        //     var element = annotation.getHtmlElement(pdfPage.commonObjs);
        //     mozL10n.translate(element);
        //     data = annotation.getData();
        //     var rect = data.rect;
        //     var view = pdfPage.view;
        //     if (data.subtype === 'Link' && !data.url) {
        //       if (data.action) {
        //         bindNamedAction(element, data.action);
        //       } else {
        //         bindLink(element, ('dest' in data) ? data.dest : null);
        //       }
        //     }
        //   }
        // });
        // debugger;
        canvas.height = viewport.height;
        canvas.width = viewport.width;
        // Render PDF page into canvas context
        var renderContext = {
          canvasContext: ctx,
          viewport: viewport
        };
        page.render(renderContext).then(function(){
          $('#slide_progress').attr('style', 'width:' +  $('#slide_canvas').width() + 'px;');
        
          console.log('retrieved text : ' + SLIDE_STRING);
          var re = /[h3p|h1p]s?:\/\/[-_.!~*¥'()a-zA-Z0-9;¥/?:¥@&=+¥$,%#]+?\//g;
          var urls = SLIDE_STRING.match(re);
          $('#url_list').html('');
          if(urls != null){
            urls = urls.map(function(url){
              return url.replace(/[h3p|h1p]/, 'http');
            });
            urls.map(function(url){
              $('#url_list').append('<li><a href="' + url + '" target="_blank">' + '<span class="glyphicon glyphicon-share"></span> '+ url + '</li>');
            });
          }
          console.log(urls);
        });
      });
      // Update page counters
      document.getElementById('page_num').textContent = pageNum;
      document.getElementById('page_count').textContent = pdfDoc.numPages;
      $('#slide_progress > .progress-bar').css({'width': (pageNum / pdfDoc.numPages * 100).toString() + '%'});
    }
    function goPrevious() {
      if (pageNum <= 1)
        return;
      pageNum--;
      renderPage(pageNum);
    }
    function goNext() {
      if (pageNum >= pdfDoc.numPages)
        return;
      pageNum++;
      renderPage(pageNum);
    }
    PDFJS.getDocument(url).then(function getPdfHelloWorld(_pdfDoc) {
      pdfDoc = _pdfDoc;
      renderPage(pageNum);
    });